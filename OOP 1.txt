#include<iostream>
using namespace std;
class complex
{
	float realp,imagp;
	public:
		complex()
		{
			realp=0;
			imagp=0;		
		}
		complex operator + (complex&);
		complex operator * (complex&);
		complex(float,float);
		friend istream & operator>>(istream &,complex &);
		friend ostream & operator<<(ostream &,complex &);		
};
complex::complex(float x,float y)
{
	realp=x;
	imagp=y;
}
istream &operator>>(istream &din,complex &c)
{
	cout<<"\nenter the real part of complex number 2:";
	din>>c.realp;
	cout<<"\nenter the imaginary part of complex number2:";
	din>>c.imagp;
	return din;
}
ostream &operator<<(ostream &dout,complex &c)
{
	dout<<c.realp<<"+"<<c.imagp<<"i"<<endl;
	return dout;	
}
complex complex::operator+(complex &c)
{
	complex temp;
	temp.realp=realp +c.realp;
	temp.imagp=imagp+c.imagp;
	return temp;
}
complex complex::operator*(complex &c)
{
	complex mul;
	mul.realp=(realp*c.realp)-(imagp*c.imagp);
	mul.imagp+(realp*c.realp)+(imagp*c.imagp);
	return mul;
}
int main()
{
	complex c2,c3,c4;
	complex c1(1.2,2.2);
	cout<<"complex no 1 is:"<<c1;
	cout<<"\nenter complex no 2 is:";
	cin>>c2;
	c3=c1+c2;
	cout<<"\naddition of two complex  number is:"<<c3<<endl;
	c4=c1*c2;
	cout<<"\nmultiplication of two number is:"<<c4<<endl;
	return 0;	
}
